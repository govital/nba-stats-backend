spring.application.name=nbastatsapplication

spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=5

spring.datasource.url=jdbc:mysql://mysql:3306/nba_stats?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

database.table.game_stats=game_stats

logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG

# Redis Configuration
spring.cache.type=redis
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=6000
spring.data.redis.database=0
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=1000ms
logging.level.org.springframework.data.redis=DEBUG

# Kafka Configuration

# Prevent Kafka from starting during build
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

# Kafka Configuration Main Topic and DLQ
kafka.listeners=PLAINTEXT://kafka:9092
kafka.port=9092
kafka.bootstrap-servers=kafka:9092
kafka.topic=game-stats-topic
kafka.dlq-topic=game-stats-dlq
kafka.group-id=game-stats-consumer-group

# Producer Configuration
spring.kafka.producer.bootstrap-servers=${kafka.bootstrap-servers}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer Configuration
spring.kafka.consumer.bootstrap-servers=${kafka.bootstrap-servers}
spring.kafka.consumer.group-id=${kafka.group-id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.talgokhberg.nbastatsapplication.model

# Enable Kafka Error Handling
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual_immediate